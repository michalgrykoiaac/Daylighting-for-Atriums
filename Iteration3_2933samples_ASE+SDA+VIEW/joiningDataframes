{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"joiningDataframes","provenance":[{"file_id":"1AZhYbhCDUojNdP4S-Tk8wgDt-ul9ChJS","timestamp":1653682758675}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aavFGckZVCfU"},"source":["#Adding views to the main dataframe"]},{"cell_type":"markdown","metadata":{"id":"2PvW4Hn9VFIS"},"source":["in this example we will use Keras to predict wages based on various professional and demographic factors."]},{"cell_type":"code","metadata":{"id":"vwueWxGEVLk1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654426112293,"user_tz":-60,"elapsed":7296,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"31f05c73-667d-46f9-a8ac-3d5b811fc84d"},"source":["# Import standard Libraries\n","import pandas as pd\n","import seaborn as sns\n","import altair as alt\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","\n","\n","\n","sns.set(rc={'figure.figsize':(10,10)})\n","print(\"imports ok\")"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["imports ok\n"]}]},{"cell_type":"markdown","metadata":{"id":"n74tPoRCCyJK"},"source":["##Load Data"]},{"cell_type":"code","metadata":{"id":"UDsLccXgE69X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654426139848,"user_tz":-60,"elapsed":22239,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"befa788e-e936-47ec-d8ef-791731df42dd"},"source":["#connect google drive to this colab\n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","metadata":{"id":"a13oEGYhFaOk","executionInfo":{"status":"ok","timestamp":1654426482561,"user_tz":-60,"elapsed":486,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"92c59d1a-5456-4ebf-f56b-f79027967358","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Load data\n","data = pd.read_csv('/content/gdrive/MyDrive/ColabNotebooks/DataEncoding/atrium_SDA+ASE_regression_analysis/atrium_SDA+ASE_v2_2969_samples.csv', delimiter= \" \")\n","pd.set_option('display.max_columns', None)\n","#data.dropna(inplace=True)\n","print(data.info())"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3000 entries, 0 to 2999\n","Data columns (total 15 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   typicalFacadeGlazingRatio  3000 non-null   float64\n"," 1   typicalFacadeWindowWidth   3000 non-null   int64  \n"," 2   groundFacadeGlazingRatio   3000 non-null   float64\n"," 3   groundFacadeWindowWidth    3000 non-null   int64  \n"," 4   buildingDepth              3000 non-null   int64  \n"," 5   balconyWidth               3000 non-null   int64  \n"," 6   atriumArea                 3000 non-null   int64  \n"," 7   aspectRatio                3000 non-null   float64\n"," 8   groundFloorHeight          3000 non-null   float64\n"," 9   typicalfloorHeight         3000 non-null   float64\n"," 10  numberLevels               3000 non-null   int64  \n"," 11  groundSDA                  2983 non-null   float64\n"," 12  firstSDA                   2969 non-null   float64\n"," 13  groundASE                  2985 non-null   float64\n"," 14  firstASE                   2971 non-null   float64\n","dtypes: float64(9), int64(6)\n","memory usage: 351.7 KB\n","None\n"]}]},{"cell_type":"code","source":["# Load data\n","viewdata = pd.read_csv('/content/gdrive/MyDrive/ColabNotebooks/DataEncoding/atrium_SDA+ASE_regression_analysis/atriumSimplifiedViewPercent-Combined.csv', delimiter= \" \")\n","pd.set_option('display.max_columns', None)\n","#viewdata.dropna(inplace=True)"],"metadata":{"id":"_qDOr8oyfYbS","executionInfo":{"status":"ok","timestamp":1654426380989,"user_tz":-60,"elapsed":514,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"ahqyPaG4ZHCC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654426387165,"user_tz":-60,"elapsed":222,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"306ada59-f878-46c2-a8dd-46f809f3d3ce"},"source":["print(viewdata.info())"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 2956 entries, 0 to 2999\n","Data columns (total 2 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   groundViewPercentage  2956 non-null   float64\n"," 1   firstViewPercentage   2956 non-null   float64\n","dtypes: float64(2)\n","memory usage: 69.3 KB\n","None\n"]}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H8Trw_aONAfI","executionInfo":{"status":"ok","timestamp":1653903543117,"user_tz":-60,"elapsed":209,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"31f75f4d-c722-4d03-b39b-914957931363"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2969, 15)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#data.drop(columns=[\"roofArea\",\"buildingHeight\"], inplace=True)\n","print(data.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8bsoSh9DNISI","executionInfo":{"status":"ok","timestamp":1654426456572,"user_tz":-60,"elapsed":204,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"f40cd791-9811-4b2a-ec4c-4a077d355267"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3000 entries, 0 to 2999\n","Data columns (total 15 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   typicalFacadeGlazingRatio  3000 non-null   float64\n"," 1   typicalFacadeWindowWidth   3000 non-null   int64  \n"," 2   groundFacadeGlazingRatio   3000 non-null   float64\n"," 3   groundFacadeWindowWidth    3000 non-null   int64  \n"," 4   buildingDepth              3000 non-null   int64  \n"," 5   balconyWidth               3000 non-null   int64  \n"," 6   atriumArea                 3000 non-null   int64  \n"," 7   aspectRatio                3000 non-null   float64\n"," 8   groundFloorHeight          3000 non-null   float64\n"," 9   typicalfloorHeight         3000 non-null   float64\n"," 10  numberLevels               3000 non-null   int64  \n"," 11  groundSDA                  2983 non-null   float64\n"," 12  firstSDA                   2969 non-null   float64\n"," 13  groundASE                  2985 non-null   float64\n"," 14  firstASE                   2971 non-null   float64\n","dtypes: float64(9), int64(6)\n","memory usage: 351.7 KB\n","None\n"]}]},{"cell_type":"markdown","source":["Merging the existing dataset with the view analysis"],"metadata":{"id":"qYoA8ZfKgXbp"}},{"cell_type":"code","source":["df_join = data.join(viewdata, rsuffix='_right')"],"metadata":{"id":"mSRVeDk4gYGT","executionInfo":{"status":"ok","timestamp":1654427009530,"user_tz":-60,"elapsed":241,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["print(df_join.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bWmBk1njiP_l","executionInfo":{"status":"ok","timestamp":1654427032517,"user_tz":-60,"elapsed":206,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"748e9b36-536f-45ba-a579-182785ecd7f3"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3000 entries, 0 to 2999\n","Data columns (total 17 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   typicalFacadeGlazingRatio  3000 non-null   float64\n"," 1   typicalFacadeWindowWidth   3000 non-null   int64  \n"," 2   groundFacadeGlazingRatio   3000 non-null   float64\n"," 3   groundFacadeWindowWidth    3000 non-null   int64  \n"," 4   buildingDepth              3000 non-null   int64  \n"," 5   balconyWidth               3000 non-null   int64  \n"," 6   atriumArea                 3000 non-null   int64  \n"," 7   aspectRatio                3000 non-null   float64\n"," 8   groundFloorHeight          3000 non-null   float64\n"," 9   typicalfloorHeight         3000 non-null   float64\n"," 10  numberLevels               3000 non-null   int64  \n"," 11  groundSDA                  2983 non-null   float64\n"," 12  firstSDA                   2969 non-null   float64\n"," 13  groundASE                  2985 non-null   float64\n"," 14  firstASE                   2971 non-null   float64\n"," 15  groundViewPercentage       2956 non-null   float64\n"," 16  firstViewPercentage        2956 non-null   float64\n","dtypes: float64(11), int64(6)\n","memory usage: 398.6 KB\n","None\n"]}]},{"cell_type":"code","source":["df_join.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"HY4chwjmiVrI","executionInfo":{"status":"ok","timestamp":1654427061589,"user_tz":-60,"elapsed":235,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"e7039e02-1fca-4448-bf41-e2e3ac900d4c"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   typicalFacadeGlazingRatio  typicalFacadeWindowWidth  \\\n","0                        0.8                         4   \n","1                        0.9                         4   \n","2                        0.8                         3   \n","3                        0.7                         2   \n","4                        0.7                         2   \n","\n","   groundFacadeGlazingRatio  groundFacadeWindowWidth  buildingDepth  \\\n","0                       0.8                        4             21   \n","1                       0.8                        3             38   \n","2                       0.8                        4             34   \n","3                       0.8                        2             16   \n","4                       0.8                        2             32   \n","\n","   balconyWidth  atriumArea  aspectRatio  groundFloorHeight  \\\n","0             3        2300          1.3                5.0   \n","1             2        1300          1.5                4.5   \n","2             4        2100          1.4                5.6   \n","3             5        1200          0.7                5.0   \n","4             4        3700          1.3                5.0   \n","\n","   typicalfloorHeight  numberLevels  groundSDA  firstSDA  groundASE  firstASE  \\\n","0                 3.0             8      100.0      37.0       21.8      12.2   \n","1                 2.6             7       49.8      23.1       13.7       8.0   \n","2                 2.8             5       80.5      23.9       19.6       8.2   \n","3                 2.6            10      100.0      36.0       28.1      10.8   \n","4                 2.8             6       71.6      23.7       17.7       6.9   \n","\n","   groundViewPercentage  firstViewPercentage  \n","0                  77.2                 77.2  \n","1                  88.1                 78.2  \n","2                  77.9                 78.3  \n","3                  69.1                 77.7  \n","4                  68.2                 78.2  "],"text/html":["\n","  <div id=\"df-c6b49e50-cab8-44fd-9ddb-5263e14f14a1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>typicalFacadeGlazingRatio</th>\n","      <th>typicalFacadeWindowWidth</th>\n","      <th>groundFacadeGlazingRatio</th>\n","      <th>groundFacadeWindowWidth</th>\n","      <th>buildingDepth</th>\n","      <th>balconyWidth</th>\n","      <th>atriumArea</th>\n","      <th>aspectRatio</th>\n","      <th>groundFloorHeight</th>\n","      <th>typicalfloorHeight</th>\n","      <th>numberLevels</th>\n","      <th>groundSDA</th>\n","      <th>firstSDA</th>\n","      <th>groundASE</th>\n","      <th>firstASE</th>\n","      <th>groundViewPercentage</th>\n","      <th>firstViewPercentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.8</td>\n","      <td>4</td>\n","      <td>0.8</td>\n","      <td>4</td>\n","      <td>21</td>\n","      <td>3</td>\n","      <td>2300</td>\n","      <td>1.3</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>8</td>\n","      <td>100.0</td>\n","      <td>37.0</td>\n","      <td>21.8</td>\n","      <td>12.2</td>\n","      <td>77.2</td>\n","      <td>77.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.9</td>\n","      <td>4</td>\n","      <td>0.8</td>\n","      <td>3</td>\n","      <td>38</td>\n","      <td>2</td>\n","      <td>1300</td>\n","      <td>1.5</td>\n","      <td>4.5</td>\n","      <td>2.6</td>\n","      <td>7</td>\n","      <td>49.8</td>\n","      <td>23.1</td>\n","      <td>13.7</td>\n","      <td>8.0</td>\n","      <td>88.1</td>\n","      <td>78.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.8</td>\n","      <td>3</td>\n","      <td>0.8</td>\n","      <td>4</td>\n","      <td>34</td>\n","      <td>4</td>\n","      <td>2100</td>\n","      <td>1.4</td>\n","      <td>5.6</td>\n","      <td>2.8</td>\n","      <td>5</td>\n","      <td>80.5</td>\n","      <td>23.9</td>\n","      <td>19.6</td>\n","      <td>8.2</td>\n","      <td>77.9</td>\n","      <td>78.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.7</td>\n","      <td>2</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>16</td>\n","      <td>5</td>\n","      <td>1200</td>\n","      <td>0.7</td>\n","      <td>5.0</td>\n","      <td>2.6</td>\n","      <td>10</td>\n","      <td>100.0</td>\n","      <td>36.0</td>\n","      <td>28.1</td>\n","      <td>10.8</td>\n","      <td>69.1</td>\n","      <td>77.7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.7</td>\n","      <td>2</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>32</td>\n","      <td>4</td>\n","      <td>3700</td>\n","      <td>1.3</td>\n","      <td>5.0</td>\n","      <td>2.8</td>\n","      <td>6</td>\n","      <td>71.6</td>\n","      <td>23.7</td>\n","      <td>17.7</td>\n","      <td>6.9</td>\n","      <td>68.2</td>\n","      <td>78.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6b49e50-cab8-44fd-9ddb-5263e14f14a1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6b49e50-cab8-44fd-9ddb-5263e14f14a1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6b49e50-cab8-44fd-9ddb-5263e14f14a1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["print(df_join.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rh8OQT_xit90","executionInfo":{"status":"ok","timestamp":1654427149707,"user_tz":-60,"elapsed":207,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"426838b5-3905-4638-af62-ded735d00459"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 2933 entries, 0 to 2999\n","Data columns (total 17 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   typicalFacadeGlazingRatio  2933 non-null   float64\n"," 1   typicalFacadeWindowWidth   2933 non-null   int64  \n"," 2   groundFacadeGlazingRatio   2933 non-null   float64\n"," 3   groundFacadeWindowWidth    2933 non-null   int64  \n"," 4   buildingDepth              2933 non-null   int64  \n"," 5   balconyWidth               2933 non-null   int64  \n"," 6   atriumArea                 2933 non-null   int64  \n"," 7   aspectRatio                2933 non-null   float64\n"," 8   groundFloorHeight          2933 non-null   float64\n"," 9   typicalfloorHeight         2933 non-null   float64\n"," 10  numberLevels               2933 non-null   int64  \n"," 11  groundSDA                  2933 non-null   float64\n"," 12  firstSDA                   2933 non-null   float64\n"," 13  groundASE                  2933 non-null   float64\n"," 14  firstASE                   2933 non-null   float64\n"," 15  groundViewPercentage       2933 non-null   float64\n"," 16  firstViewPercentage        2933 non-null   float64\n","dtypes: float64(11), int64(6)\n","memory usage: 412.5 KB\n","None\n"]}]},{"cell_type":"code","source":["df_join.dropna(inplace=True)"],"metadata":{"id":"BfHkZ9XAiqQF","executionInfo":{"status":"ok","timestamp":1654427141882,"user_tz":-60,"elapsed":201,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"cAb6E4TZZohN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1653903553151,"user_tz":-60,"elapsed":210,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"9931c6e2-29bc-46a6-e9a9-333ceba9b3d6"},"source":["for colname, col in data.iteritems():\n","  print(colname, \"min_val\", col.min(), \"max_val\", col.max())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["typicalFacadeGlazingRatio min_val 0.7 max_val 0.9\n","typicalFacadeWindowWidth min_val 2 max_val 4\n","groundFacadeGlazingRatio min_val 0.7 max_val 0.9\n","groundFacadeWindowWidth min_val 2 max_val 4\n","buildingDepth min_val 15 max_val 40\n","balconyWidth min_val 1 max_val 6\n","atriumArea min_val 1000 max_val 3900\n","aspectRatio min_val 0.5 max_val 1.5\n","groundFloorHeight min_val 3.0 max_val 6.0\n","typicalfloorHeight min_val 2.5 max_val 3.0\n","numberLevels min_val 1 max_val 10\n","groundSDA min_val 26.1 max_val 100.0\n","firstSDA min_val 15.2 max_val 100.0\n","groundASE min_val 5.6 max_val 64.4\n","firstASE min_val 5.0 max_val 34.4\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"rX_d2RWvi5Bk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# saving to file\n","#%%script echo \n","filepath_csv = '/content/gdrive/MyDrive/ColabNotebooks/DataEncoding/atrium_SDA+ASE_regression_analysis/atrium_SDA+ASE_v3_2933_samples.csv'\n","df_join.to_csv(filepath_csv,index=False,mode='w')"],"metadata":{"id":"v6vBlHY9jhLO","executionInfo":{"status":"ok","timestamp":1654427649120,"user_tz":-60,"elapsed":234,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df_join.hist(\"groundViewPercentage\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":319},"id":"QpbnScpqlT4g","executionInfo":{"status":"ok","timestamp":1654427847225,"user_tz":-60,"elapsed":608,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"410e987c-9419-4785-d0d8-652cbcceaafc"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fb7935c7550>]],\n","      dtype=object)"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_join.plot.scatter(\"atriumArea\", \"groundViewPercentage\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"g48vv5Zyk4b8","executionInfo":{"status":"ok","timestamp":1654428006938,"user_tz":-60,"elapsed":783,"user":{"displayName":"Michal Gryko","userId":"04494246827515006595"}},"outputId":"c22e42d7-4903-41fb-cc6e-5f8366a3f7bf"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stderr","text":["*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fb792fa1ed0>"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}